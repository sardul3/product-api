name: PR Title Formatter

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  pull-requests: write
  issues: write

jobs:
  check-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Check and Format PR Title
        id: pr_info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title;
            
            // Define the expected format pattern
            const titleRegex = /^Issue #[0-9X]+ \| .+ \| .+$/;
            
            // Only proceed if the title doesn't match the format
            if (!titleRegex.test(title)) {
              const branchName = pr.head.ref;
              
              // Try to extract issue number from branch name
              let issueNumber = branchName.split('-')[0];
              if (!issueNumber.match(/^\d+$/)) {
                issueNumber = 'XXXXX';
              }
              
              // Get PR author
              const author = pr.user.login;
              
              // Remove any malformed issue numbers or separators from the start
              let cleanTitle = title.replace(/^(?:Issue #)?(?:\d+|XXXXX)?\s*(?:\||-)?\s*(?:[^|]+\|)?\s*/, '');
              
              // Format the new title
              const newTitle = `Issue #${issueNumber} | ${author} | ${cleanTitle}`;
              
              try {
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  title: newTitle
                });
                
                // Post a comment explaining the change
                const message = `ðŸ¤– I've updated your PR title to match the required format:\n\n` +
                              `Old: "${title}"\n` +
                              `New: "${newTitle}"\n\n` +
                              `Required format: Issue #<number> | <author> | <title>`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: message
                });
                
                core.info(`Updated PR title from "${title}" to "${newTitle}"`);
              } catch (error) {
                core.setFailed(`Failed to update PR title: ${error.message}`);
              }
            } else {
              core.info('PR title already matches the required format. No changes needed.');
            }
